/* Problem 2: Even Fibonacci numbers
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/
package main

import "fmt"

func main() {
	fib := fibonacci()
	sum := sumEvens(fib)
	fmt.Println(sum)
}

func fibonacci() (fib []int) {
	fib = []int{1, 2}
	for x := 3; x <= 4000000; {
		fib = append(fib, x)
		x += fib[len(fib)-2]
	}
	return
}

func sumEvens(nums []int) (sum int) {
	for _, x := range nums {
		if x%2 == 0 {
			sum += x
		}
	}
	return
}
